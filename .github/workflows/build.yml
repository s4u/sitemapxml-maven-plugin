name: Build

on:
  push:
    branches:
      - 'master'
      - 'main'
    tags:
      - 'v*'

  schedule:
    - cron: '55 5 * * 5'

jobs:

  setup:
    name: Setup
    runs-on: ubuntu-latest

    if: |
      startsWith(github.ref, 'refs/tags/')
      || !startsWith(github.event.head_commit.message , '[maven-release-plugin] prepare release')

    outputs:
      branch: ${{ steps.setup.outputs.branch }}
      date-ym: ${{ steps.setup.outputs.date-ym }}
      sonar: ${{ steps.setup.outputs.sonar }}
      maven-matrix: ${{ steps.setup.outputs.maven-matrix }}
      maven-default: ${{ steps.setup.outputs.maven-default }}

    steps:
      - id: setup
        uses: s4u/.github/actions/setup@master

  verify:
    name: Build ${{ matrix.os.label }} jdk-${{ matrix.java }} mvn-${{ matrix.maven }}
    needs: setup

    runs-on: ${{ matrix.os.name }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - name: ubuntu-latest
            label: Linux
          - name: windows-latest
            label: Windows
          - name: macOS-latest
            label: macOS
        java: [ 8, 11, 16, 17-ea ]
        maven: ${{ fromJSON( needs.setup.outputs.maven-matrix ) }}

    steps:
      - uses: s4u/setup-maven-action@v1.2.1
        with:
          checkout-fetch-depth: 0
          java-version: ${{ matrix.java }}
          maven-version: ${{ matrix.maven }}
          settings-sonatypeSnapshots: true
          settings-properties: |
            [
              {"sonar.login": "${{ needs.setup.outputs.sonar }}"},
              {"sonar.branch.name": "${{ needs.setup.outputs.branch }}"}
            ]
          cache-prefix: ${{ needs.setup.outputs.date-ym}}-
          cache-path-add: ~/.sonar/cache

      - name: sonar setup
        id: sonar
        run: echo "::set-output name=mvn-args::sonar:sonar -P coverage"
        if: >
          matrix.os.name == 'ubuntu-latest'
          && matrix.java == '11'
          && matrix.maven == fromJSON( needs.setup.outputs.maven-matrix )[0]
          && github.repository_owner == 's4u'
          && startsWith( github.ref, 'refs/heads/')

      - run: mvn --errors --show-version verify ${{steps.sonar.outputs.mvn-args}}
        env:
          SIGN_KEY: ${{ secrets.SIGN_KEY }}

  site-test:
    name: Maven Site - Test
    needs: setup

    runs-on: ubuntu-latest

    steps:
      - uses: s4u/setup-maven-action@v1.2.1
        with:
          java-version: 8
          maven-version: 3.8.1
          settings-sonatypeSnapshots: true
          cache-prefix: ${{ needs.setup.outputs.date-ym}}-maven-site-

      - run: mvn --errors --show-version site

  deploy:
    name: Build - Deploy
    concurrency: maven-deploy

    if: github.repository_owner == 's4u'

    needs: [ setup, verify, site-test ]

    runs-on: ubuntu-latest

    steps:
      - uses: s4u/setup-maven-action@v1.2.1
        with:
          java-version: 8
          maven-version: ${{ needs.setup.outputs.maven-default }}
          settings-sonatypeSnapshots: true
          settings-servers: '[{"id": "ossrh", "username": "${env.OSS_USER}", "password": "${env.OSS_PASS}"}]'
          cache-prefix: ${{ needs.setup.outputs.date-ym}}-

      - run: mvn --errors --show-version deploy -Dmaven.test.skip=true
        env:
          OSS_USER: ${{ secrets.OSS_USER }}
          OSS_PASS: ${{ secrets.OSS_PASS }}
          SIGN_KEY: ${{ secrets.SIGN_KEY }}

  site-deploy:
    name: Site - Deploy
    concurrency: site-deploy
    if: github.repository_owner == 's4u' && startsWith(github.ref, 'refs/tags/')

    needs: [ setup, deploy ]

    runs-on: ubuntu-latest

    steps:
      - uses: s4u/setup-maven-action@v1.2.1
        with:
          java-version: 8
          maven-version: 3.8.1
          settings-sonatypeSnapshots: true
          settings-properties: |
            [
              {"username": "git"},
              {"password": "${{ secrets.TECH_TOKEN }}"},
              {"scmpublish.pubScmUrl": "scm:git:${{ github.event.repository.url}}"},
              {"scmpublish.dryRun": "false"}
            ]
          cache-prefix: ${{ needs.setup.outputs.date-ym}}-maven-site-

      - run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Action"

      - run: mvn --errors --show-version site-deploy

  publish-release:
    name: Publish Release
    concurrency: release-drafter

    if: github.repository_owner == 's4u' && startsWith(github.ref, 'refs/tags/')

    needs: site-deploy
    runs-on: ubuntu-latest

    steps:
      - id: tag
        run: echo "::set-output name=name::${GITHUB_REF#refs/tags/}"

      - uses: release-drafter/release-drafter@v5.15.0
        with:
          publish: false
          name: ${{ steps.tag.outputs.name }}
          tag: ${{ steps.tag.outputs.name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
